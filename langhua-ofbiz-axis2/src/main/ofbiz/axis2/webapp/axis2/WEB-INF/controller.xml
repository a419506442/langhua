<?xml version="1.0" encoding="UTF-8"?>
<site-conf xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/site-conf.xsd">
    <!-- The controller elements that are common to all OFBiz components can be found in the following xml file. A component
        can override the elements found in the common-controller.xml file. -->

    <include location="component://common/webcommon/WEB-INF/common-controller.xml" />

    <description>Apache Axis2 Configuration File</description>

    <!-- Events to run on every request before security (chains exempt) -->
    <preprocessor>
        <!-- This event allows affilate/distributor entry on any page -->
        <event name="checkExternalLoginKey" type="java" path="org.ofbiz.webapp.control.LoginWorker" invoke="checkExternalLoginKey" />
        <event name="setAssociationId" type="java" path="org.ofbiz.ecommerce.misc.ThirdPartyEvents" invoke="setAssociationId" />
        <event name="checkTrackingCodeUrlParam" type="java" path="org.ofbiz.marketing.tracking.TrackingCodeEvents"
            invoke="checkTrackingCodeUrlParam" />
        <event name="checkPartnerTrackingCodeUrlParam" type="java" path="org.ofbiz.marketing.tracking.TrackingCodeEvents"
            invoke="checkPartnerTrackingCodeUrlParam" />
        <event name="keepCartUpdated" type="java" path="org.ofbiz.order.shoppingcart.ShoppingCartEvents" invoke="keepCartUpdated" />
        <event name="restoreAutoSaveList" type="java" path="com.tungstenstore.shoppinglist.ShoppingListEvents" invoke="restoreAutoSaveList" />
    </preprocessor>
    
    <postprocessor>
        <!-- This event is after everything else including login. Use this to put company affiliation IS_COMPANY_MAN in the context
            vs a million scripts -->
        <event name="setCompanyAffiliation" type="java" path="com.tungstenstore.party.PartyEvents" invoke="checkCompanyAffiliation" />
    </postprocessor>
    
    <after-login>
        <!-- Some attributes to set up for cart clear logic -->
        <event name="initClearCartForUserLogin" type="java" path="com.tungstenstore.shoppingcart.ShoppingCartEvents" invoke="initClearCartForUserLogin"/>
        <!-- Not needed? <event name="updateAssociatedDistributor" type="java" path="org.ofbiz.ecommerce.misc.ThirdPartyEvents" invoke="updateAssociatedDistributor"/> -->
        <event name="keepCartUpdated" type="java" path="org.ofbiz.order.shoppingcart.ShoppingCartEvents" invoke="keepCartUpdated"/>
        <!-- after login, get everything from the auto-save list -->
        <event name="restoreAutoSaveList" type="java" path="com.tungstenstore.shoppinglist.ShoppingListEvents" invoke="restoreAutoSaveList"/>
        <!-- after login and restoring from the auto-save list, save everything to the auto-save list to handle anything that may have already been in the cart before login 
             Note: For Tungsten we always clear the cart before loading the auto-save list, so previous statement does not apply. -->
        <event name="saveCartToAutoSaveList" type="java" path="com.tungstenstore.shoppinglist.ShoppingListEvents" invoke="saveCartToAutoSaveList"/>
        <!-- For Tungsten, we may need to guarantee cart clear for some user account types (this interacts with auto-save list) -->
        <event name="ensureClearCartForUserLogin" type="java" path="com.tungstenstore.shoppingcart.ShoppingCartEvents" invoke="ensureClearCartForUserLogin"/>
    </after-login>
    
    
    <!-- Request Mappings -->
    <!-- Login/Logout -->
    <request-map uri="checkLogin" edit="false">
        <description>Verify a user is logged in.</description>
        <security https="true" auth="false" />
        <event type="java" path="org.ofbiz.securityext.login.LoginEvents" invoke="storeCheckLogin" />
        <response name="success" type="view" value="main" />
        <response name="error" type="view" value="login" />
    </request-map>
    <request-map uri="login">
        <security https="true" auth="false" />
        <event type="java" path="org.ofbiz.webapp.control.LoginWorker" invoke="login" />
        <response name="success" type="view" value="main" />
        <!-- <response name="requirePasswordChange" type="view" value="requirePasswordChange"/> -->
        <response name="error" type="view" value="login" />
    </request-map>

    <!-- Password -->
    <request-map uri="setPassword">
        <security https="true" auth="false" />
        <event type="java" path="com.osafe.events.LoginEvents" invoke="setPassword" />
        <response name="success" type="view" value="setPassword" />
        <response name="error" type="view" value="setPassword" />
    </request-map>
    <request-map uri="updatePassword">
        <security https="true" auth="false" />
        <event type="java" path="com.osafe.events.LoginEvents" invoke="updatePassword" />
        <response name="success" type="view" value="login" />
        <response name="error" type="view" value="setPassword" />
    </request-map>
    <request-map uri="changePassword">
        <security https="true" auth="false" />
        <event type="service"  invoke="updatePassword"/>
        <response name="success" type="view-last" />
        <response name="error" type="view-last" />
    </request-map>

    <request-map uri="logout">
        <security https="true" auth="true" />
        <event type="java" path="org.ofbiz.webapp.control.LoginWorker" invoke="logout" />
        <response name="success" type="request-redirect" value="main" />
        <response name="error" type="view" value="main" />
    </request-map>
    <request-map uri="autoLogout">
        <security https="true" auth="false" />
        <event type="java" path="org.ofbiz.webapp.control.LoginWorker" invoke="autoLoginRemove" />
        <response name="success" type="request-redirect" value="login" />
        <response name="error" type="view" value="main" />
    </request-map>
    <request-map uri="authview">
        <security https="true" auth="true" />
        <response name="success" type="view" value="main" />
    </request-map>

    <!-- Request Mappings -->
    <request-map uri="main">
        <security https="false" auth="false" />
        <response name="success" type="view" value="main" />
    </request-map>
    <!-- ContactUs -->
    <request-map uri="contactus">
        <security https="false" auth="false" />
        <response name="success" type="view" value="contactus" />
    </request-map>
    <!-- About Us -->
    <request-map uri="aboutus">
        <security https="false" auth="false" />
        <response name="success" type="view" value="aboutus" />
    </request-map>
    <!-- Place holder requests for product and category URL rewrite -->
    <request-map uri="product">
        <security https="false" auth="false" />
        <response name="success" type="view" value="product" />
    </request-map>
    <request-map uri="category">
        <security https="false" auth="false" />
        <response name="success" type="view" value="category" />
    </request-map>
    <request-map uri="plannedProductUpload">
        <security https="false" auth="true" />
        <response name="success" type="view" value="plannedProductUpload" />
        <response name="error" type="view" value="plannedProductUpload" />
    </request-map>
    <request-map uri="adHocProductConfig">
        <security https="false" auth="false" />
        <response name="success" type="view" value="adHocProductConfig" />
        <response name="error" type="view" value="adHocProductConfig" />
    </request-map>

    <!-- Product Production Detail -->
    <request-map uri="createUpdateProductProductionContent">
        <security https="false" auth="true"/>
        <event type="service" invoke="addProductProductionPdfAndContent" />
        <response name="success" type="request" value="processProspectiveAssetResult"/>
        <response name="error" type="view" value="plannedProductConfig"/>
    </request-map>
    <request-map uri="processProspectiveAssetResult">
        <security direct-request="false"/>
        <event type="java" path="com.confero.proton.events.ProspectiveAssetEvents" invoke="processProspectiveAssetResult" />
        <response name="success" type="request" value="prospectiveAssetPreview" />
        <response name="error" type="view" value="plannedProductConfig" />
        <response name="notpdf" type="view" value="plannedProductUpload" />
    </request-map>
    <request-map uri="prospectiveAssetPreview">
        <security auth="false" https="false" direct-request="false"/>
        <event type="java" path="com.confero.proton.events.ContentEvents" invoke="getProspectiveAssetPreview" />
        <response name="success" type="request" value="createPlannedProductInstance" />
        <response name="error" type="view" value="plannedProductConfig" />
    </request-map>
    <request-map uri="createPlannedProductInstance">
        <security direct-request="false"/>
        <event type="java" path="com.confero.proton.events.ProductEvents" invoke="createPlannedProductInstance" />
        <response name="success" type="view" value="plannedProductConfig" />
        <response name="error" type="view" value="plannedProductConfig" />
    </request-map>

    <request-map uri="applyQuickFix">
        <event type="java" path="com.confero.proton.events.ContentEvents" invoke="applyQuickFix" />
        <response name="success" type="none" />
        <response name="error" type="none" />
    </request-map>
    <request-map uri="analyzeProspectiveAsset">
        <event type="java" path="com.confero.proton.events.ContentEvents" invoke="analyzeProspectiveAsset" />
        <response name="success" type="view" value="analysisDetailsAndOptions" />
        <response name="error" type="none" />
    </request-map>
    <request-map uri="prospectiveAssetPreviewStream">
        <security auth="false" https="false" />
        <event type="java" path="com.confero.proton.events.ContentEvents" invoke="getProspectiveAssetPreviewStream" />
        <response name="success" type="none" />
        <response name="error" type="none" />
    </request-map>
    <request-map uri="prospectiveAssetStream">
        <security auth="false" https="false" />
        <event type="java" path="com.confero.proton.events.ContentEvents" invoke="getProspectiveAssetStream" />
        <response name="success" type="none" />
        <response name="error" type="none" />
    </request-map>
    <request-map uri="productionProductGuide">
        <security auth="false" https="false" />
        <event type="java" path="com.confero.proton.events.ContentEvents" invoke="getProductionProductGuide" />
        <response name="success" type="none" />
    </request-map>

    <request-map uri="processProductOptions">
        <response name="success" type="view" value="productOptions" />
        <response name="error" type="none" />
    </request-map>

    <!-- +++++ User and USER PROFILE Related +++++ -->
    <request-map uri="profile">
        <security https="true" auth="true" />
        <response name="success" type="view" value="profile" />
    </request-map>
    <!-- +++++ June 2012 becaus the view last does not always work, we have to have separate requests for the
         +++++ profile page vs. forms used on one page checkout. Maybe someday we can figure out what is going
         +++++ on and why this isnt working correctly. the following requests are used for ~profile forms -->


    <!-- +++++++ New Account ++++++ -->
    <request-map uri="account">
        <security https="true" auth="true" />
        <response name="success" type="view" value="account" />
        <response name="error" type="view" value="account" />
    </request-map>
    <request-map uri="accountsettings">
        <security https="true" auth="true" />
        <response name="success" type="view" value="accountsettings" />
        <response name="error" type="view" value="account" />
    </request-map>
    <request-map uri="order">
        <security https="true" auth="true" />
        <response name="success" type="view" value="order" />
        <response name="error" type="view" value="account" />
    </request-map>
    <request-map uri="orderpad">
        <security https="true" auth="true" />
        <response name="success" type="view" value="orderpad" />
        <response name="error" type="view" value="account" />
    </request-map>
    <request-map uri="paymentsettings">
        <security https="true" auth="true" />
        <response name="success" type="view" value="paymentsettings" />
        <response name="error" type="view" value="account" />
    </request-map>
    <request-map uri="addressbook">
        <security https="true" auth="true" />
        <response name="success" type="view" value="addressbook" />
        <response name="error" type="view" value="account" />
    </request-map>
    <!-- +++++ RMH: Manage Address Book +++++ -->
    <request-map uri="setdefshiplocation">
        <security https="true" auth="true" />
        <event type="java" path="com.tungstenstore.shoppingcart.ShoppingCartEvents" invoke="addUpdateCartPreference" />
        <response name="success" type="view-last" />
        <response name="error" type="view" value="addressbook" />
    </request-map>
    <request-map uri="setdefshipmethod">
        <security https="true" auth="true" />
        <event type="java" path="com.tungstenstore.shoppingcart.ShoppingCartEvents" invoke="addUpdateCartPreference" />
        <response name="success" type="view-last" />
        <response name="error" type="view" value="addressbook" />
    </request-map>
    <!-- RMH June 1  use for all postal addresses where you want to associate a phone number with
         a particular address location. Some day, migrate all the checkout requests to manage shipping and
         billing addresses w/phone numbers to use this event ++++ -->
    <request-map uri="managePostalInfo">
        <security https="true" auth="true" />
        <event type="java" path="com.tungstenstore.contact.ContactMechEvents" invoke="managePostalInfo" />
        <response name="success" type="view-last" />
        <response name="error" type="view-last" />
    </request-map>

    <request-map uri="assetlibrary">
        <security https="true" auth="true" />
        <response name="success" type="view" value="assetlibrary" />
        <response name="error" type="view" value="account" />
    </request-map>
    <request-map uri="order">
        <security https="true" auth="true" />
        <response name="success" type="view" value="order" />
    </request-map>
    <request-map uri="register">
        <security https="true" auth="false" />
        <response name="success" type="view" value="register" />
        <response name="error" type="view" value="register" />
    </request-map>
    <request-map uri="recoverPassword">
        <security https="true" auth="false" />
        <response name="success" type="view" value="passwordRecovery" />
        <response name="error" type="view" value="passwordRecovery" />
    </request-map>
    <request-map uri="dispatchPasswordRecovery">
        <security https="true" auth="false" />
        <event type="simple" path="component://tungstenstore/script/com/tungstenstore/events/TungstenEvents.xml" invoke="dispatchPasswordRecovery" />
        <!-- Can't call service directly; need to determine product store <event type="service" invoke="dispatchTungstenStorePasswordRecovery"/> -->
        <response name="success" type="view" value="passwordRecovery" />
        <response name="error" type="view" value="passwordRecovery" />
    </request-map>
    <!-- ++++ Cant use OFBiz CustomerEvents.createCustomer Throws too many errors +++++ -->
    <request-map uri="createcustomer">
        <security https="true" auth="false" />
        <event type="java" path="com.tungstenadmin.party.PartyEvents" invoke="createClient" />
        <response name="success" type="view" value="main" />
        <response name="error" type="view" value="register" />
    </request-map>
    <request-map uri="addPostalInfo">
        <security https="true" auth="true" />
        <event type="java" path="com.tungstenstore.contact.ContactMechEvents" invoke="addPostalInfo" />
        <response name="success" type="view" value="onepagecheckout" />
        <response name="error" type="view" value="onepagecheckout" />
    </request-map>
    <!-- RMH: June 2012 For onepagecheckout NOTE: Cant figure out why viewlast doesn't work -->
    <request-map uri="updatePostalInfo">
        <security https="true" auth="true" />
        <event type="java" path="com.tungstenstore.contact.ContactMechEvents" invoke="updatePostalInfo" />
        <response name="success" type="view" value="onepagecheckout" />
        <response name="error" type="view" value="onepagecheckout" />
    </request-map>
    <request-map uri="updatePostalInfoAndOptPhone">
        <security https="true" auth="true" />
        <event type="java" path="com.tungstenstore.party.PartyEvents" invoke="updatePostalInfoAndOptPhone" />
        <response name="success" type="view" value="onepagecheckout" />
        <response name="error" type="view" value="onepagecheckout" />
    </request-map>
    <!-- RMH: June 2012 For onepagecheckout NOTE: Cant figure out why viewlast doesn't work -->
    <request-map uri="updatePersonInfo">
        <security https="true" auth="true" />
        <event type="java" path="com.tungstenstore.party.PartyEvents" invoke="updatePersonInfo" />
        <response name="success" type="view" value="onepagecheckout" />
        <response name="error" type="view" value="onepagecheckout" />
    </request-map>
    <request-map uri="createAddressFromAnother">
        <security https="true" auth="true" />
        <event type="java" path="com.tungstenstore.contact.ContactMechEvents" invoke="createAddressFromAnother" />
        <response name="success" type="view" value="profile" />
        <response name="error" type="view" value="profile" />
    </request-map>
    <request-map uri="expireAddress">
        <security https="true" auth="true" />
        <event type="java" path="com.tungstenstore.contact.ContactMechEvents" invoke="expireActivatePostalAddress" />
        <response name="success" type="view-last" />
        <response name="error" type="view-last" />
    </request-map>
    <request-map uri="enableAddress">
        <security https="true" auth="true" />
        <event type="java" path="com.tungstenstore.contact.ContactMechEvents" invoke="expireActivatePostalAddress" />
        <response name="success" type="view-last" />
        <response name="error" type="view-last" />
    </request-map>
    <!-- RMH: June 2012 For onepagecheckout NOTE: Cant figure out why viewlast doesn't work -->
    <request-map uri="addUpdatePhoneNumber">
        <security https="true" auth="true" />
        <event type="java" path="com.tungstenstore.party.PartyEvents" invoke="addUpdatePhoneNumber" />
        <response name="success" type="view" value="onepagecheckout" />
        <response name="error" type="view" value="onepagecheckout" />
    </request-map>


    <request-map uri="addUpdateShipProviderPreference">
        <security https="true" auth="true" />
        <event type="java" path="com.tungstenstore.party.PartyEvents" invoke="addUpdateShipProviderPreference" />
        <response name="success" type="view" value="profile" />
        <response name="error" type="view" value="profile" />
    </request-map>
    <request-map uri="addUpdatePaymentPreference">
        <security https="true" auth="true" />
        <event type="java" path="com.tungstenstore.party.PartyEvents" invoke="addUpdatePaymentPreference" />
        <response name="success" type="view" value="profile" />
        <response name="error" type="view" value="profile" />
    </request-map>

    <!-- ++++++++ May 2012 Start of Order Pad Events +++++++++++ -->
    <!-- ++++++++ Mostly these events wrap OFBiz Shopping List Services since we dont want a user -->
    <!-- +++++++++ creating more than a single Order Pad and Order Pads might have other fun properties -->
    <request-map uri="createOrderPad">
        <security https="true" auth="false" />
        <event type="java" path="com.tungstenstore.orderpad.OrderPadEvents" invoke="createOrderPad" />
        <response name="success" type="view-last" />
        <response name="error" type="view-last" />
    </request-map>
    <!-- Event doesn't exist
    <request-map uri="deleteOrderPad">
        <security https="true" auth="true" />
        <event type="java" path="com.tungstenstore.orderpad.OrderPadEvents" invoke="deleteOrderPad" />
        <response name="success" type="view-last" />
        <response name="error" type="view-last" />
    </request-map>
    -->

    <request-map uri="checkoutWithOrderPad">
        <security https="true" auth="true" />
        <event type="java" path="com.tungstenstore.orderpad.OrderPadEvents" invoke="checkoutWithOrderPad" />
        <response name="success" type="request" value="checkout" />
        <response name="error" type="view" value="profile#lpOrderPad" />
    </request-map>
    <request-map uri="addOrderPadToCart">
        <security https="true" auth="true" />
        <event type="java" path="com.tungstenstore.orderpad.OrderPadEvents" invoke="checkoutWithOrderPad" />
        <response name="success" type="request-redirect" value="viewcart" />
        <response name="error" type="view" value="profile#lpOrderPad" />
    </request-map>
    <request-map uri="removeSelectedFromOrderPad">
        <security https="true" auth="true" />
        <event type="java" path="com.tungstenstore.orderpad.OrderPadEvents" invoke="removeSelectedFromOrderPad" />
        <response name="success" type="view-last" />
        <response name="error" type="view-last" />
    </request-map>
    <!-- ++++ This event adds from catalog pages +++++ -->
    <request-map uri="addItemToOrderPad">
        <security https="true" auth="true" />
        <event type="java" path="com.tungstenstore.orderpad.OrderPadEvents" invoke="addItemToOrderPad" />
        <!-- 2013-03-27: For now, let this behave as additem behaves (with view switches), for consistency
        <response name="success" type="request-redirect" value="category">
            <redirect-parameter name="category_id" />
        </response>
        -->
        <response name="success" type="view" value="main" />
        <response name="error" type="view" value="profile#lpOrderPad" />
    </request-map>
    <!-- ++++ This event updates the quantity for an order pad item +++++ -->
    <request-map uri="updateOrderPadQuantity">
        <security https="true" auth="true" />
        <event type="java" path="com.tungstenstore.orderpad.OrderPadEvents" invoke="updateOrderPadQuantity" />
        <response name="success" type="view-last" />
        <response name="error" type="view-last" />
    </request-map>

    <!-- ++++++++ Cart Events ++++++++ -->
    <request-map uri="additem">
        <security https="false" auth="false" />
        <event type="java" path="com.tungstenstore.shoppingcart.ShoppingCartEvents" invoke="addToCartRegular" />
        <!-- Note (2013-01-21): This request should ultimately use some kind of view-last logic, but for now
             we let screens (category and product) forward back to themselves with necessary params, because of issues with current view-last implementation and controller design.         
        <response name="success" type="view-last" value="main" /> -->
        <response name="success" type="view" value="main" />
        <response name="product" type="view" value="product" />
        <response name="error" type="view" value="showcart" /> <!-- If there is an error, override view is ignored by controller. Most logical alternative: focus on cart to emphasize the error's context. -->
    </request-map>
    <request-map uri="addConfiguredItem">
        <security https="false" auth="false" />
        <event type="java" path="com.tungstenstore.shoppingcart.ShoppingCartEvents" invoke="addToCart" />
        <response name="success" type="request-redirect" value="category" />
        <response name="product" type="view" value="product" />
        <response name="error" type="view" value="showcart" />
    </request-map>
    <request-map uri="emptycart">
        <security https="false" auth="false" />
        <event type="java" path="com.tungstenstore.shoppingcart.ShoppingCartEvents" invoke="clearCart" />
        <response name="success" type="view-last" value="main" />
        <response name="error" type="view" value="showcart" />
    </request-map>
    <request-map uri="emptyCartMain">
        <security https="false" auth="false" />
        <event type="java" path="com.tungstenstore.shoppingcart.ShoppingCartEvents" invoke="clearCart" />
        <response name="success" type="view" value="main" />
        <response name="error" type="view" value="showcart" />
    </request-map>
    <request-map uri="emptyCartHome">
        <security https="false" auth="false" />
        <event type="java" path="com.tungstenstore.shoppingcart.ShoppingCartEvents" invoke="clearCart" />
        <response name="success" type="view" value="main" /> <!-- No view-home for now <response name="success" type="view-home" value="main" /> -->
        <response name="error" type="view" value="showcart" />
    </request-map>
    <request-map uri="modifycart">
        <security https="false" auth="false" />
        <event type="java" path="com.tungstenstore.shoppingcart.ShoppingCartEvents" invoke="modifyCart" />
        <response name="success" type="view-last" value="main" />
        <response name="error" type="view" value="showcart" />
    </request-map>
    <request-map uri="modifyCartMain">
        <security https="false" auth="false" />
        <event type="java" path="com.tungstenstore.shoppingcart.ShoppingCartEvents" invoke="modifyCart" />
        <response name="success" type="view" value="main" />
        <response name="error" type="view" value="showcart" />
    </request-map>
    <request-map uri="modifyCartHome">
        <security https="false" auth="false" />
        <event type="java" path="com.tungstenstore.shoppingcart.ShoppingCartEvents" invoke="modifyCart" />
        <response name="success" type="view" value="main" />
        <response name="error" type="view" value="showcart" />
    </request-map>
    <!-- ++++++ Request to modify cart items directly from the finalize checkout page; should return to finalize request afterward
                Note: May involve re-evaluating order details, so may have to run checkout checks again; caller should include necessary params (for now) ++++++++ -->
    <request-map uri="modifyCartAndFinalizeCheckout">
        <security https="true" auth="true" />
        <event type="java" path="com.tungstenstore.shoppingcart.ShoppingCartEvents" invoke="modifyCart" />
        <response name="success" type="request" value="checkCartHasItemsAndFinalizeCheckout" />
        <response name="error" type="view" value="onepagecheckout" />
    </request-map>
    <!-- ++++++ Analog of modifyCartAndFinalizeCheckout but for empty operation; should result in empty cart, but double-check anyway ++++ -->
    <request-map uri="emptyCartAndFinalizeCheckout">
        <security https="true" auth="true" />
        <event type="java" path="com.tungstenstore.shoppingcart.ShoppingCartEvents" invoke="clearCart" />
        <response name="success" type="request" value="checkCartHasItemsAndFinalizeCheckout" />
        <response name="error" type="view" value="onepagecheckout" />
    </request-map>
    <!-- ++++++ Checks if cart is empty before proceeding to finalizeCheckout ++++ -->
    <request-map uri="checkCartHasItemsAndFinalizeCheckout">
        <security https="true" auth="true" direct-request="false"/>
        <event type="java" path="com.tungstenstore.shoppingcart.ShoppingCartEvents" invoke="checkCartHasItems"/>
        <response name="success" type="request" value="finalizeCheckout"/>
        <response name="cartEmpty" type="view" value="onepagecheckout"/>
        <response name="error" type="view" value="onepagecheckout" /> <!-- <response name="error" type="view" value="showcart"/> -->
    </request-map>
    
    <!-- ++++++++ Shopping List ++++++ -->
    <request-map uri="addItemToShoppingList">
        <security auth="true" https="true" />
        <event type="service" invoke="createShoppingListItem" />
        <response name="success" type="view-last" />
        <response name="error" type="view-last" />
    </request-map>
    <request-map uri="removeShoppingListItem">
        <security auth="true" https="true" />
        <event type="service" invoke="removeShoppingListItem" />
        <response name="success" type="view-last" />
        <response name="error" type="view-last" />
    </request-map>
    <!-- <request-map uri="addBulkToShoppingList"> <security auth="true" https="true"/> <event type="java" path="org.ofbiz.order.shoppinglist.ShoppingListEvents"
        invoke="addBulkFromCart"/> <response name="success" type="view" value="editShoppingList"/> <response name="error" type="view"
        value="showcart"/> </request-map> -->
    <!-- ++++++++ Checkout View Requests And Events +++++++ -->
    <!-- We Get Here From The Mini Shopping Cart, for example -->
    <request-map uri="viewcart">
        <security https="false" auth="false" />
        <response name="success" type="view" value="showcart" />
        <response name="error" type="view" value="showcart" />
    </request-map>

    <!-- The event(s) that controls the checkout process -->

    <request-map uri="doCheckout">
        <security https="true" auth="false" />
        <event type="java" path="com.tungstenstore.checkout.CheckoutEvents" invoke="doCheckout" />
        <!-- <response name="setCheckoutType" type="view" value="checkoutlogin" /> -->
        <response name="setCheckoutType" type="request" value="setCheckoutType" />
        <response name="processContactInfo" type="view" value="onepagecheckout" />
        <response name="processShippingInfo" type="view" value="onepagecheckout" />
        <response name="processShippingMethod" type="view" value="onepagecheckout" />
        <response name="processPaymentInfo" type="view" value="onepagecheckout" />
        <response name="orderReview" type="request" value="finalizeCheckout" />
        <response name="processOrder" type="request" value="processorder" />
        <response name="success" type="view" value="onepagecheckout" />
        <response name="error" type="view" value="onepagecheckout" />
    </request-map>
    <!-- ++++++ Need a way to get here directly if the user navigates away from checkout ++++ -->
    <request-map uri="checkout">
        <security https="true" auth="true" />
        <event type="java" path="com.tungstenstore.checkout.CheckoutEvents" invoke="doCheckout" />
        <response name="setCheckoutType" type="request" value="setCheckoutType" />
        <response name="success" type="view" value="onepagecheckout" />
        <response name="error" type="view" value="onepagecheckout" />
    </request-map>
    <!-- ++++++ Need a way to skip quickly or quickly re-evalutate order and return to finalize checkout (Note: 2013-01-15: Now currently unused) ++++ -->
    <request-map uri="checkoutAndFinalize">
        <security https="true" auth="true" direct-request="false"/>
        <event type="java" path="com.tungstenstore.checkout.CheckoutEvents" invoke="doCheckout" />
        <response name="setCheckoutType" type="request" value="setCheckoutType" />
        <response name="success" type="request" value="finalizeCheckout" />
        <response name="error" type="view" value="onepagecheckout" />
    </request-map>
    <!-- ++++++ Something for testing ++++++ -->
    <request-map uri="testcheckout">
        <response name="success" type="view" value="test_onepagecheckout" />
        <response name="error" type="view" value="test_onepagecheckout" />
    </request-map>


    <!-- ++++++ Two types of checkout supported: anonymous and logged in. This ++++++ Event called on the checkoutlogin webpage
        for anonymous check set up ++++ -->
    <request-map uri="setCheckoutType">
        <!-- <security https="true" auth="false"/> -->
        <security https="true" auth="true" />
        <event type="java" path="com.tungstenstore.checkout.CheckoutEvents" invoke="setCheckoutType" />
        <response name="success" type="view" value="onepagecheckout" />
        <response name="error" type="view" value="checkoutlogin" />
    </request-map>

    <!-- ++++++ Checkout Events To Collect Contact, Billing, Shipping And Payment Info ++++++ Called directly from onepagecheckout
        ++++++++ -->
    <request-map uri="finalizeCheckout">
        <security https="true" auth="true" />
        <!-- <security https="true" auth="false"/> -->
        <response name="success" type="view" value="checkoutreview" />
        <response name="error" type="view" value="onepagecheckout" />
    </request-map>

    <!-- +++++++ Processess The orders Terms and conditions +++++ -->
    <request-map uri="processTerms">
        <!-- <security https="true" auth="false"/> -->
        <security https="true" auth="true" />
        <event type="java" path="com.tungstenstore.checkout.CheckoutEvents" invoke="doCheckout" />
        <response name="success" type="view" value="checkoutreview" />
        <response name="error" type="view" value="checkoutreview" />
    </request-map>
    <!-- === +++++++++ Note: reviewOrder has CALLS processorder ++++++++ == -->
    <!-- === +++++++++ This is where the call to create the order happens ++++++++ == -->
    <request-map uri="processorder">
        <security direct-request="false" />
        <!-- <security https="true" auth="false"/> -->
        <event type="java" path="org.ofbiz.order.shoppingcart.CheckOutEvents" invoke="createOrder" />
        <!-- <event type="java" path="com.tungstenstore.checkout.CheckoutEvents" invoke="createOrder"/> -->
        <response name="sales_order" type="request" value="checkBlacklist" />
        <response name="purchase_order" type="request" value="checkBlacklist" />
        <response name="work_order" type="request" value="checkBlacklist" />
        <response name="error" type="view" value="checkouterror" />
    </request-map>
    <request-map uri="checkBlacklist">
        <security direct-request="false" />
        <event type="java" path="org.ofbiz.order.shoppingcart.CheckOutEvents" invoke="checkOrderBlacklist" />
        <response name="success" type="request" value="processpayment" />
        <response name="failed" type="request" value="checkouterror" />
        <response name="error" type="view" value="checkouterror" />
    </request-map>
    <request-map uri="failedBlacklist">
        <security direct-request="false" />
        <event type="java" path="org.ofbiz.order.shoppingcart.CheckOutEvents" invoke="failedBlacklistCheck" />
        <response name="success" type="view" value="main" />
        <response name="error" type="view" value="error" />
    </request-map>
    <!-- == We process payment AFTER the order is created ==== -->
    <request-map uri="processpayment">
        <security https="true" direct-request="false" />
        <event type="java" path="com.tungstenstore.checkout.CheckoutEvents" invoke="processPayment" />
        <response name="success" type="request" value="clearcartfororder" />
        <response name="fail" type="request" value="checkouterror" />
        <response name="error" type="view" value="checkouterror" />
    </request-map>
    <!-- RMH April 2012 need a place to go if there is an error with payment processing -->
    <request-map uri="checkouterror">
        <!-- <security https="true" direct-request="false"/> -->
        <security https="true" auth="false" />
        <response name="success" type="view" value="checkouterror" />
        <response name="error" type="view" value="checkouterror" />
    </request-map>

    <!-- +++++++ Because there is a problem w the OFBiz clearCart we need to do it ourselves ++++++ -->
    <request-map uri="clearcartfororder">
        <security direct-request="false" />
        <event type="java" path="com.tungstenstore.checkout.CheckoutEvents" invoke="clearCart" />
        <response name="success" type="request" value="checkExternalPayment" />
        <response name="error" type="view" value="checkoutreview" />
    </request-map>
    <request-map uri="checkExternalPayment">
        <security https="true" direct-request="false" />
        <event type="java" path="org.ofbiz.order.shoppingcart.CheckOutEvents" invoke="checkExternalPayment" />
        <!-- <response name="none" type="request" value="emailorder"/> -->
        <response name="none" type="request" value="setOrderComplete" />
        <response name="offline" type="request" value="emailorder" />
        <response name="worldpay" type="request" value="callWorldPay" />
        <response name="paypal" type="request" value="callPayPal" />
        <response name="auth_net_sim" type="request" value="callAuthNetSim" />
        <response name="billact" type="request" value="emailorder" />
        <response name="cod" type="request" value="emailorder" />
        <response name="error" type="view" value="checkoutreview" />
    </request-map>
    <request-map uri="emailorder">
        <security https="true" direct-request="false" />
        <event type="service" path="async" invoke="sendOrderConfirmation" />
        <response name="success" type="view" value="ordercomplete" />
        <response name="error" type="view" value="ordercomplete" />
    </request-map>
    <request-map uri="setOrderComplete">
        <security direct-request="false" />
        <event type="java" path="com.tungstenstore.checkout.CheckoutEvents" invoke="setOrderComplete" />
        <response name="success" type="view" value="ordercomplete" />
        <response name="error" type="view" value="ordercomplete" />
    </request-map>
    <request-map uri="ordercomplete">
        <security https="false" auth="false" />
        <response name="success" type="view" value="ordercomplete" />
    </request-map>
    <request-map uri="ordersummary">
        <security https="true" auth="true" />
        <response name="success" type="view" value="ordersummary" />
    </request-map>

    <!-- ++++++ PayPal Payment Related Events RMH added the following April 12 2012 Not sure which are used where but I'm goint
        to try and find out ++++++ -->
    <request-map uri="callPayPal">
        <security https="true" direct-request="false" />
        <event type="java" path="org.ofbiz.accounting.thirdparty.paypal.PayPalEvents" invoke="callPayPal" />
        <response name="success" type="none" />
        <response name="error" type="view" value="paypalerror" />
    </request-map>

    <request-map uri="paypalerror">
        <security https="true" auth="false" />
        <response name="success" type="view" value="paypalerror" />
        <response name="error" type="view" value="paypalerror" />
    </request-map>
    <request-map uri="payPalNotify">
        <security https="false" />
        <event type="java" path="org.ofbiz.accounting.thirdparty.paypal.PayPalEvents" invoke="payPalIPN" />
        <response name="success" type="none" />
        <response name="error" type="none" />
    </request-map>
    <request-map uri="payPalCancel">
        <security https="true" />
        <event type="java" path="org.ofbiz.accounting.thirdparty.paypal.PayPalEvents" invoke="cancelPayPalOrder" />
        <response name="success" type="view" value="main" />
        <response name="error" type="view" value="main" />
    </request-map>

    <!-- PayPal Express Checkout Requests -->
    <request-map uri="setPayPalCheckout">
        <security auth="false" https="true" />
        <event type="java" path="org.ofbiz.order.thirdparty.paypal.ExpressCheckoutEvents" invoke="setExpressCheckout" />
        <response name="success" type="request" value="payPalCheckoutRedirect" />
        <response name="error" type="view-last" />
    </request-map>
    <request-map uri="payPalCheckoutRedirect">
        <security auth="false" https="true" />
        <event type="java" path="org.ofbiz.order.thirdparty.paypal.ExpressCheckoutEvents" invoke="expressCheckoutRedirect" />
        <response name="success" type="none" />
        <response name="error" type="view-last" />
    </request-map>
    <request-map uri="payPalCheckoutReturn">
        <security auth="false" https="true" />
        <event type="java" path="org.ofbiz.order.thirdparty.paypal.ExpressCheckoutEvents" invoke="getExpressCheckoutDetails" />
        <response name="success" type="request" value="reviewOrder" />
        <response name="error" type="view-last" value="main" />
    </request-map>
    <request-map uri="payPalCheckoutCancel">
        <security auth="false" https="true" />
        <event type="java" path="org.ofbiz.order.thirdparty.paypal.ExpressCheckoutEvents" invoke="expressCheckoutCancel" />
        <response name="success" type="view-last" />
    </request-map>
    <request-map uri="payPalCheckoutUpdate">
        <description>Handles callbacks from PayPal's Express Checkout Instant Update API</description>
        <security auth="false" https="false" />
        <event type="java" path="org.ofbiz.order.thirdparty.paypal.ExpressCheckoutEvents" invoke="expressCheckoutUpdate" />
        <response name="success" type="none" />
    </request-map>

    <!-- Authorize.net -->
    <request-map uri="callAuthNetSim">
      <security https="true" direct-request="false" />
      <event type="java" path="com.tungstenstore.payment.authorizedotnet.AuthorizeNetSimEvents" invoke="callAuthorizeNetSim" />
      <response name="success" type="none" />
      <response name="error" type="view" value="authneterror" />
    </request-map>
    <request-map uri="authNetSimNotify">
      <security https="false" auth="false"/>
      <event type="java" path="com.tungstenstore.payment.authorizedotnet.AuthorizeNetSimEvents" invoke="notifyAuthorizeNetSim" />
      <response name="success" type="view" value="ordercomplete" />
      <response name="error" type="view" value="authneterror" />
    </request-map>
    <request-map uri="authneterror">
      <security https="true" auth="false" />
      <response name="success" type="view" value="authneterror" />
      <response name="error" type="view" value="authneterror" />
    </request-map>

    <!-- Misc -->
    <request-map uri="getFileUploadProgressStatus">
        <security https="false" auth="false"/>
        <event type="service" invoke="getFileUploadProgressStatus"/>
        <response name="success" type="request" value="json"/>
        <response name="error" type="request" value="json"/>
    </request-map>

    <!-- View Mappings -->
    <view-map name="main" type="screen" page="component://tungstenstore/widget/TungstenScreens.xml#main" />
    <view-map name="login" type="screen" page="component://tungstenstore/widget/TungstenScreens.xml#login" />
    <view-map name="setPassword" type="screen" page="component://tungstenstore/widget/TungstenScreens.xml#setPassword" />
    <view-map name="showcart" type="screen" page="component://tungstenstore/widget/TungstenScreens.xml#shoppingcart" />
    <view-map name="checkoutlogin" type="screen" page="component://tungstenstore/widget/TungstenScreens.xml#checkoutlogin" />
    <!-- USER views -->
    <view-map name="register" type="screen" page="component://tungstenstore/widget/TungstenScreens.xml#register" />
    <view-map name="passwordRecovery" type="screen" page="component://tungstenstore/widget/TungstenScreens.xml#passwordRecovery" />
    <view-map name="profile" type="screen" page="component://tungstenstore/widget/TungstenScreens.xml#profile" />
    <view-map name="account" type="screen" page="component://tungstenstore/widget/UserScreens.xml#account" />
    <!-- June 2012 account views -->
    <view-map name="order" type="screen" page="component://tungstenstore/widget/UserScreens.xml#order" />
    <view-map name="accountsettings" type="screen" page="component://tungstenstore/widget/UserScreens.xml#accountsettings" />
    <view-map name="orderpad" type="screen" page="component://tungstenstore/widget/UserScreens.xml#orderpad" />
    <view-map name="paymentsettings" type="screen" page="component://tungstenstore/widget/UserScreens.xml#paymentsettings" />
    <view-map name="addressbook" type="screen" page="component://tungstenstore/widget/UserScreens.xml#addressbook" />
    <view-map name="assetlibrary" type="screen" page="component://tungstenstore/widget/UserScreens.xml#assetlibrary" />

    <!-- STORE Product Listing -->
    <view-map name="category" type="screen" page="component://tungstenstore/widget/TungstenScreens.xml#category" />
    <view-map name="product" type="screen" page="component://tungstenstore/widget/TungstenScreens.xml#product" />
    <view-map name="plannedProductUpload" type="screen"	page="component://tungstenstore/widget/TungstenScreens.xml#plannedProductUpload" />
    <view-map name="plannedProductConfig" type="screen" page="component://tungstenstore/widget/TungstenScreens.xml#plannedProductConfig" />
    <view-map name="analysisDetails" type="screen" page="component://tungstenstore/widget/TungstenScreens.xml#analysisDetails" />
    <view-map name="analysisDetailsAndOptions" type="screen" page="component://tungstenstore/widget/TungstenScreens.xml#analysisDetailsAndOptions" />
    <view-map name="productOptions" type="screen" page="component://tungstenstore/widget/TungstenScreens.xml#productOptions" />
    <view-map name="adHocProductConfig" type="screen" page="component://tungstenstore/widget/TungstenScreens.xml#adHocProductConfig" />
    <view-map name="onepagecheckout" type="screen" page="component://tungstenstore/widget/TungstenScreens.xml#onepagecheckout" />
    <view-map name="test_onepagecheckout" type="screen" page="component://tungstenstore/widget/TestScreens.xml#onepagecheckout" />
    <view-map name="checkouterror" type="screen" page="component://tungstenstore/widget/TungstenScreens.xml#checkouterror" />
    <view-map name="checkoutreview" type="screen" page="component://tungstenstore/widget/TungstenScreens.xml#checkoutreview" />
    <view-map name="ordercomplete" type="screen" page="component://tungstenstore/widget/TungstenScreens.xml#ordercomplete" />
    <view-map name="ordersummary" type="screen" page="component://tungstenstore/widget/TungstenScreens.xml#ordersummary" />
    <view-map name="paypalerror" type="screen" page="component://tungstenstore/widget/TungstenScreens.xml#paypalerror" />
    <view-map name="authneterror" type="screen" page="component://tungstenstore/widget/TungstenScreens.xml#authneterror" /> 
    <!-- About US -->
    <view-map name="aboutus" type="screen" page="component://tungstenstore/widget/TungstenScreens.xml#aboutus" />
    <!-- Contact Us -->
    <view-map name="contactus" type="screen" page="component://tungstenstore/widget/TungstenScreens.xml#contactus" />
</site-conf>
